#this program is designed to solve project euler problem #370 in python 2.7.6
#http://projecteuler.net/problem=370

n = 10**6 #so i can test my program to see if it returns the correct value
possible_triangles = {} #will append geometric product triangles

#create a class of triangles with functions to determine perimeter and test for geometric products
class Triangles:
        def __init__(self, a, b, c):
                self.a = a
                self.b = b
                self.c = c
        def perimeter(self):
                return self.a + self.b + self.c
        def triangle_sides(self):
                if self.a < self.b < self.c:
                        return True
                else:
                        return False
        def geo_prog(self):
                if triangle_sides(self)==True:
                        if self.b**2==self.a*self.c:
                                return True
                else:
                        return False


#adds all triangles of perimeter <= n to the set of possible triangles
for a in range(n+1):
        for b in range(n+1):
                for c in range(n+1):
                        triangle = Triangles(a,b,c)
                        if triangle.perimeter() <= range(n+1):
                                possible_triangles += triangle

#this function determines how many triangles of the possible triangles satisfy the geometric product condition
def number_of_triangles(x):
        count = 0
        while True:
                for elts in x:
                        if elts.geo_prog() == True:
                                yield elts
                        count += 1
        print count

number_of_triangles(possible_triangles)

