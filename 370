#this program is designed to solve project euler problem #370 in python 2.7.6
#http://projecteuler.net/problem=370

n = 10**6
length=range(n+1)

class Triangles(object):
        def __init__(self, a, b, c):
                self.a = a
                self.b = b
                self.c = c
                a <= n
                b <= n
                c <= n
        def perimeter(self):
                return self.a + self.b + self.c
        def side_range(self):
                if (self.a <= n) and (self.b <= n) and (self.c <= n):
                        return True
                else:
                        return False
        def triangle_sides(self):
                if self.a < self.b < self.c:
                        return True
                else:
                        return False
        def geo_prog(self):
                if triangle_sides(self)==True:
                        if self.b**2==self.a*self.c:
                                return True
                else:
                        return False
        def triangle_inequality(self):
                sides = [self.a, self.b, self.c]
                if sum(sides) - max(sides) > max(sides):
                        return True
                else:
                        return False
                
the_triangles=Triangles(a,b,c)
possible_triangles = filter(the_triangles.triangle_inequality(), the_triangles)


print len(possible_triangles)
